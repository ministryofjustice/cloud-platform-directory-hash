package check

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"os"
	"strings"
)

func singleNamespace(ns string) (v bool) {
	// This file is generated by a GitHub action.
	jsonFile := os.Getenv("HOME") + "/files.json"
	var arr []string
	var s []string

	f, err := ioutil.ReadFile(jsonFile)
	if err != nil {
		fmt.Println(err)
	}

	err = json.Unmarshal([]byte(f), &arr)
	if err != nil {
		fmt.Println(err)
	}

	for _, val := range arr {
		if strings.Contains(val, base) {
			res := strings.Split(val, "/")
			s = append(s, res[2])
		}
	}

	s = removeDuplicates(s)

	if len(s) == 1 {
		v = true
	} else {
		fmt.Println("There are", len(s), "namespaces in this PR:", s)
	}

	return
}

func removeDuplicates(elements []string) []string {
	// Use map to record duplicates as we find them.
	encountered := map[string]bool{}
	result := []string{}

	for v := range elements {
		if encountered[elements[v]] == true {
			// Do not add duplicate.
		} else {
			// Record this element as an encountered element.
			encountered[elements[v]] = true
			// Append to result slice.
			result = append(result, elements[v])
		}
	}
	// Return the new slice.
	return result
}

func hashesMatch(prHash, gaHash string) (match bool) {
	if prHash == gaHash {
		match = true
	}

	return
}
